name: Review Destroy

on:
  workflow_call:
    inputs:
      aws_region:
        required: true
        type: string
      deploy_target_tag:
        required: true
        type: string
      deployer_config_branch:
        required: true
        type: string
      deployer_config_repo:
        required: true
        type: string
      image:
        required: true
        type: string
      php_version:
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      GITHUB_PAT:
        required: true
      SSH_PRIVATE_KEY:
        required: true

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ inputs.aws_region }}
  DEPLOY_TARGET_TAG: ${{ inputs.deploy_target_tag }}
  PHP_VERSION: ${{ inputs.php_version }}
  GITHUB_REF_OVERRIDE: ${{ github.event.ref }}

jobs:
  destroy:
    if: |
      github.event.ref_type == 'branch' && 
      (startsWith(github.event.ref, 'review/') || startsWith(github.event.ref, 'feature/'))
    runs-on: self-hosted
    container:
      image: ${{ inputs.image }}
    steps:
      - name: Get review name
        run: echo "REVIEW_NAME=${GITHUB_REF_OVERRIDE##*/}" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download and merge Deployer configuration repository
        run: |
          eval `ssh-agent -s`
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' | ssh-add - > /dev/null
          git clone ${{ inputs.deployer_config_repo }} --single-branch --branch ${{ inputs.deployer_config_branch }} ./deployer-temp
          rm -r deployer-temp/.git deployer-temp/.gitignore
          mv deployer-temp/* ./
          rm -r deployer-temp
          
      - name: Download environment file via Deployer
        run: /root/.composer/vendor/bin/dep aws:download-env-file stage=review --no-interaction

      - name: Destroy deployment
        run: |
          eval `ssh-agent -s`
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' | ssh-add - > /dev/null
          /root/.composer/vendor/bin/dep review:destroy stage=review --no-interaction
